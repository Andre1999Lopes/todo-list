{"version":3,"sources":["store/storeModel.ts","store/blocks/index.ts","store/index.ts","components/Input/index.tsx","components/Button/index.tsx","store/hookStore.ts","components/Task/index.tsx","components/Block/index.tsx","components/Header/index.tsx","App.tsx","index.tsx"],"names":["BlockModel","taskStore","blocks","Array","addTask","action","state","payload","blockIndex","tasks","push","addBlock","removeTask","splice","taskIndex","removeBlock","setTaskFinished","finished","isFinished","store","createStore","StyledInput","styled","input","StyledButton","p","typedHooks","createTypedHooks","useStoreState","useStoreActions","StyledTask","StyledTaskOptions","div","Task","index","name","urgent","task","actions","taskOptionsRef","useRef","taskRef","deleteTask","ref","className","onClick","current","classList","toggle","StyledDiv","Block","addTaskAction","deleteBlock","blockOptionsRef","newTaskOptionsRef","selectRef","inputRef","placeholder","value","taskName","newTask","map","i","StyledHeader","header","Header","StyledSection","section","App","addBlockState","React","Input","Button","blockName","newBlock","console","log","block","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6f366ec.chunk.js","sourcesContent":["import block from './blocks';\r\nimport IBlockStore from './blocks/IBlockStore';\r\n\r\ninterface IBlockModel {\r\n\ttaskStore: IBlockStore;\r\n};\r\n\r\nconst BlockModel:IBlockModel = {\r\n\ttaskStore: block,\r\n}\r\n\r\nexport { BlockModel };\r\nexport type { IBlockModel };","import { action } from 'easy-peasy';\r\nimport IBlockStore, { IBlock } from './IBlockStore';\r\n\r\nconst blockStore:IBlockStore = {\r\n\tblocks: Array<IBlock>(),\r\n\taddTask: action((state, payload) => {\r\n\t\tstate.blocks[payload.blockIndex].tasks.push(payload);\r\n\t}),\r\n\taddBlock: action((state, payload) => {\r\n\t\tstate.blocks.push(payload);\r\n\t}),\r\n\tremoveTask: action((state, payload) => {\r\n\t\tstate.blocks[payload.blockIndex].tasks.splice(payload.taskIndex, 1);\r\n\t}),\r\n\tremoveBlock: action((state, payload) => {\r\n\t\tstate.blocks.splice(payload, 1);\r\n\t}),\r\n\tsetTaskFinished: action((state, payload) => {\r\n\t\tstate.blocks[payload.blockIndex].tasks[payload.taskIndex].finished = !payload.isFinished;\r\n\t})\r\n}\r\n\r\nexport default blockStore;\r\n","import { createStore } from 'easy-peasy';\r\nimport { BlockModel } from './storeModel';\r\n\r\nconst store = createStore(BlockModel);\r\n\r\nexport default store;","import styled from 'styled-components';\r\n\r\nconst StyledInput = styled.input`\r\n\t@font-face{\r\n    font-family: 'comfortaa';\r\n    src: url('../../fonts/Comfortaa-Regular.ttf');\r\n\t}\r\n\r\n\tcolor: black;\r\n\tdisplay: block;\r\n\tbackground-color: #ffffff;\r\n\tmargin-left: auto;\r\n\tmargin-right: auto;\r\n\tmargin-top: 50px;\r\n\twidth: 50%;\r\n\theight: 50px;\r\n\tfont-size: 200%;\r\n\tborder: none;\r\n\toutline: none;\r\n\tborder-radius: 5px;\r\n\tfont-family: 'comfortaa';\r\n\ttransition: background-color 100ms linear;\r\n\r\n\t&:focus {\r\n\t\tbackground-color: #e1e1e1;\r\n\t}\r\n`;\r\n\r\nexport default StyledInput","import styled from 'styled-components';\r\n\r\nconst StyledButton = styled.p`\r\n\tdisplay: block;\r\n\tbackground-color: #253031;\r\n\tcolor: white;\r\n\twidth: 15%;\r\n\ttext-align: center;\r\n\tpadding: 5px;\r\n\tmargin-top: 10px;\r\n\tmargin-left: auto;\r\n\tmargin-right: auto;\r\n\tfont-size: 150%;\r\n\tfont-family: 'comfortaa';\r\n\tborder-radius: 10px;\r\n\ttransition: background-color 100ms linear;\r\n\tuser-select: none;\r\n\r\n\t&:hover {\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: #3D4F51;\r\n\t}\r\n`;\r\n\r\nexport default StyledButton;","import { createTypedHooks } from 'easy-peasy';\r\nimport { IBlockModel } from './storeModel';\r\n\r\nconst typedHooks = createTypedHooks<IBlockModel>();\r\n\r\nexport const useStoreState = typedHooks.useStoreState;\r\nexport const useStoreActions = typedHooks.useStoreActions;\r\n","import React, { useRef } from 'react';\r\nimport { useStoreState, useStoreActions } from '../../store/hookStore';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledTask = styled.p`\r\n\tposition: relative;\r\n\tfont-size: 120%;\r\n\tbackground-color: #ffffff;\r\n\tpadding: 5px;\r\n\tborder-radius: 5px;\r\n\tmargin-bottom: 1px;\r\n\r\n\t&.urgent {\r\n\t\tbackground-color: #ff6f6f;\r\n\t}\r\n\r\n\t&.finished {\r\n\t\ttext-decoration: line-through;\r\n\t\tbackground-color: #8aff73;\r\n\t}\r\n`;\r\n\r\nconst StyledTaskOptions = styled.div`\r\n\tborder-radius: 5px;\r\n\tposition: absolute;\r\n\tpadding: 5px;\r\n\tright: -80%;\r\n\ttop: 100%;\r\n\tbackground-color: #ffffff;\r\n\tz-index: 1;\r\n\ttransition: all 100ms linear;\r\n\r\n\t& p {\r\n\t\tmargin: 5px;\r\n\t\tborder-radius: 5px;\r\n\t\tpadding: 2px;\r\n\t\tuser-select: none;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 80%;\r\n\t\twidth: 15vw;\r\n\t\ttransition: background-color 100ms linear;\r\n\t}\r\n\r\n\t& p:hover {\r\n\t\tbackground-color: #3D4F51;\r\n\t\tcolor: white;\r\n\t}\r\n`;\r\n\r\ninterface IProps {\r\n\tblockIndex: number;\r\n\tindex: number;\r\n\tname: string;\r\n\turgent: boolean;\r\n}\r\n\r\nfunction Task({ blockIndex, index, name, urgent }:IProps) {\r\n\tconst task = useStoreState(state => state.taskStore.blocks[blockIndex].tasks[index]);\r\n\tconst setTaskFinished = useStoreActions(actions => actions.taskStore.setTaskFinished);\r\n\tconst taskOptionsRef = useRef() as React.MutableRefObject<HTMLDivElement>;\r\n\tconst taskRef = useRef() as React.MutableRefObject<HTMLParagraphElement>;\r\n\tconst deleteTask = useStoreActions(actions => actions.taskStore.removeTask);\r\n\r\n\tconst handleDeleteTaskClick = () => {\r\n\t\ttaskOptionsRef.current.classList.toggle('inv');\r\n\t\tdeleteTask({blockIndex, taskIndex: index});\r\n\t}\r\n\r\n\tconst handleSetTaskFinishedClick = () => {\r\n\t\ttaskOptionsRef.current.classList.toggle('inv');\r\n\t\tsetTaskFinished({ blockIndex, taskIndex: index, isFinished: task.finished });\r\n\t}\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<StyledTask\r\n\t\t\t\tref={taskRef}\r\n\t\t\t\tclassName={(urgent ? 'urgent' : '') + (task.finished ? ' finished' : '')}\r\n\t\t\t>\r\n\t\t\t\t{name}\r\n\t\t\t\t<span\r\n\t\t\t\t\tonClick={() => {taskOptionsRef.current.classList.toggle('inv')}}\r\n\t\t\t\t>\r\n\t\t\t\t\t...\r\n\t\t\t\t</span>\r\n\t\t\t\t<StyledTaskOptions\r\n\t\t\t\t\t\tref={taskOptionsRef} className='inv'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<p onClick={handleSetTaskFinishedClick}\r\n\t\t\t\t\t\t>Marcar tarefa como conclu√≠da</p>\r\n\t\t\t\t\t\t<p onClick={handleDeleteTaskClick}>Excluir tarefa</p>\r\n\t\t\t\t</StyledTaskOptions>\r\n\t\t\t</StyledTask>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Task;","import React, { useRef } from 'react';\r\nimport { useStoreState, useStoreActions } from '../../store/hookStore';\r\nimport styled from 'styled-components';\r\nimport Task from '../Task';\r\n\r\nconst StyledDiv = styled.div`\r\n\t@font-face{\r\n\t\tfont-family: 'comfortaa';\r\n\t\tsrc: url('../../fonts/Comfortaa-Regular.ttf');\r\n\t}\r\n\r\n\tfont-family: 'comfortaa';\r\n\tposition: relative;\r\n\theight: 100%;\r\n\twidth: 20%;\r\n\tbackground-color: rgba(0, 238, 255, 0.3);\r\n\tpadding: 5px;\r\n\tmargin: 10px;\r\n\tword-wrap: break-word;\r\n\r\n\t& h1 {\r\n\t\tmargin: 0;\r\n\t}\r\n\r\n\t& span {\r\n\t\tposition: relative;\r\n\t\tfloat: right;\r\n    cursor: pointer;\r\n\t\tuser-select: none;\r\n\t}\r\n\r\n\t& .newTaskOptions {\r\n\t\tposition: absolute;\r\n\t\tbackground-color: #ffffff;\r\n\t\tdisplay: block;\r\n\t\tmargin-left: auto;\r\n\t\tmargin-right: auto;\r\n\t\topacity: 1;\r\n\t\tpadding: 2px;\r\n\t\tborder-radius: 5px;\r\n\t\tz-index: 1;\r\n\t\tmargin: 5px 0 0 0;\r\n\t\tuser-select: none;\r\n\t}\r\n\r\n\t& .newTaskOptions input {\r\n\t\tcolor: black;\r\n\t\tbackground-color: #d6d6d6;\r\n\t\tdisplay: block;\r\n\t\tmargin-left: auto;\r\n\t\tmargin-right: auto;\r\n\t\toutline: none;\r\n\t\tborder: none;\r\n\t\tborder-radius: 5px;\r\n\t\tfont-family: 'comfortaa';\r\n\t\ttransition: background-color 100ms linear;\r\n\t\tfont-size: 120%;\r\n\r\n\t\t:focus {\r\n\t\t\tbackground-color: #b8b8b8;\r\n\t\t}\r\n\t}\r\n\r\n\t& .newTaskOptions select {\r\n\t\tdisplay: block;\r\n\t\toutline: none;\r\n\t\tmargin: 5px auto;\r\n\t\tfont-family: 'comfortaa';\r\n\t\tfont-size: 105%;\r\n\t}\r\n\r\n\t& .options {\r\n\t\tdisplay: block;\r\n\t\topacity: 1;\r\n\t\tbackground-color: #ffffff;\r\n\t\tpadding: 2px;\r\n\t\tborder-radius: 5px;\r\n    z-index: 2;\r\n    position: absolute;\r\n\t\ttop: -20%;\r\n\t\tmargin: 10px 0 0 0;\r\n\t\tuser-select: none;\r\n\t\ttransition: all 100ms ease-out;\r\n\r\n\t\tp {\r\n\t\t\tborder-radius: 5px;\r\n    \tcursor: pointer;\r\n\t\t\tpadding: 2px;\r\n\t\t\ttransition: all 100ms ease-out;\r\n\t\t}\r\n\r\n\t\tp:hover {\r\n\t\t\tbackground-color: #3D4F51;\r\n\t\t\tcolor: white;\r\n\t\t}\r\n\t}\r\n\r\n\t& .addTaskBtn {\r\n\t\tdisplay: block;\r\n\t\tbackground-color: #253031;\r\n\t\tcolor: white;\r\n\t\twidth: 50%;\r\n\t\ttext-align: center;\r\n\t\tpadding: 5px;\r\n\t\tmargin-top: 10px;\r\n\t\tmargin-left: auto;\r\n\t\tmargin-right: auto;\r\n\t\tfont-size: 105%;\r\n\t\tfont-family: 'comfortaa';\r\n\t\tborder-radius: 10px;\r\n\t\ttransition: background-color 100ms linear;\r\n\t\tuser-select: none;\r\n\r\n\t\t:hover {\r\n\t\t\tcursor: pointer;\r\n\t\t\tbackground-color: #3D4F51;\r\n\t\t}\r\n\t}\r\n\r\n\t& .inv {\r\n\t\ttop: -100%;\r\n\t\topacity: 0;\r\n\t\tvisibility: hidden;\r\n\t}\r\n`;\r\n\r\ninterface IProps {\r\n\tindex: number;\r\n\tname: string;\r\n}\r\n\r\nfunction Block({ index, name }:IProps ) {\r\n\tconst tasks = useStoreState(state => state.taskStore.blocks[index].tasks);\r\n\tconst addTaskAction = useStoreActions(actions => actions.taskStore.addTask);\r\n\tconst deleteBlock = useStoreActions(actions => actions.taskStore.removeBlock);\r\n\tconst blockIndex = index;\r\n\r\n\tconst blockOptionsRef = useRef() as React.MutableRefObject<HTMLDivElement>;\r\n\tconst newTaskOptionsRef = useRef() as React.MutableRefObject<HTMLDivElement>;\r\n\tconst selectRef = useRef() as React.MutableRefObject<HTMLSelectElement>;\r\n\tconst inputRef = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n\r\n\tconst handleNewTaskClick = () => {\r\n\t\tnewTaskOptionsRef.current.classList.toggle('inv');\r\n\t\tblockOptionsRef.current.classList.toggle('inv');\r\n\t}\r\n\r\n\tconst handleDeleteBlockClick = () => {\r\n\t\tblockOptionsRef.current.classList.toggle('inv');\r\n\t\tdeleteBlock(index);\r\n\t}\r\n\r\n\tconst addTask = () => {\r\n\t\tconst taskName = inputRef.current.value;\r\n\t\tif (taskName){\r\n\t\t\tconst urgent = selectRef.current.value === 'true' ? true : false;\r\n\r\n\t\t\tconst newTask = {\r\n\t\t\t\tblockIndex: blockIndex,\r\n\t\t\t\tname: taskName,\r\n\t\t\t\turgent,\r\n\t\t\t\tfinished: false\r\n\t\t\t};\r\n\r\n\t\t\tinputRef.current.value = '';\r\n\t\t\tnewTaskOptionsRef.current.classList.toggle('inv');\r\n\t\t\taddTaskAction(newTask);\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<StyledDiv>\r\n\t\t\t<h1>{name}<span onClick={() => blockOptionsRef.current.classList.toggle('inv')}>...</span></h1>\r\n\t\t\t<div ref={blockOptionsRef} className='options inv'>\r\n\t\t\t\t<p onClick={handleNewTaskClick}>Adicionar tarefa</p>\r\n\t\t\t\t<p onClick={handleDeleteBlockClick}>Excluir bloco</p>\r\n\t\t\t</div>\r\n\t\t\t<div ref={newTaskOptionsRef} className='newTaskOptions inv'>\r\n\t\t\t\t<input ref={inputRef} placeholder='Nome da nova tarefa'></input>\r\n\t\t\t\t<select ref={selectRef}>\r\n\t\t\t\t\t<option value='false'>Normal</option>\r\n\t\t\t\t\t<option value='true'>Urgente</option>\r\n\t\t\t\t</select>\r\n\t\t\t\t<p onClick={addTask} className='addTaskBtn'>Adicionar tarefa</p>\r\n\t\t\t\t<p onClick={() => {\r\n\t\t\t\t\tinputRef.current.value = '';\r\n\t\t\t\t\tnewTaskOptionsRef.current.classList.toggle('inv');\r\n\t\t\t\t}} className='addTaskBtn'>Cancelar</p>\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\ttasks.map(\r\n\t\t\t\t\t(task, i) => (\r\n\t\t\t\t\t\t<Task blockIndex={blockIndex} index={i} name={task.name} urgent={task.urgent} />\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</StyledDiv>\r\n\t);\r\n}\r\n\r\nexport default Block;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledHeader = styled.header`\r\n\t@font-face{\r\n\t\tfont-family: 'quicksand';\r\n\t\tsrc: url('../../fonts/Quicksand_Book.otf');\r\n\t}\r\n\r\n\tdisplay: flex;\r\n\tbackground-color: #FF7099;\r\n\r\n\t.headerTitle{\r\n\t\tmargin-left: 50px;\r\n\t\twidth: 100%;\r\n\t\tfont-family: 'quicksand';\r\n\t\tfont-size: 300%;\r\n\t\tcolor:#F8F32B;\r\n\t}\r\n`;\r\n\r\nfunction Header(){\r\n\treturn(\r\n\t\t<StyledHeader>\r\n\t\t\t<h1 className='headerTitle'>Ultimate Procrastinator Pro</h1>\r\n\t\t</StyledHeader>\r\n\t)\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Input from './components/Input';\r\nimport Button from './components/Button';\r\nimport Block from './components/Block';\r\nimport Header from './components/Header';\r\nimport styled from 'styled-components';\r\nimport { useStoreState, useStoreActions } from './store/hookStore';\r\nimport { ITask } from './store/blocks/IBlockStore';\r\n\r\nconst StyledSection = styled.section`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tjustify-content: center;\r\n`;\r\n\r\nfunction App() {\r\n  const blocks = useStoreState(state => state.taskStore.blocks);\r\n\tconst addBlockState = useStoreActions(actions => actions.taskStore.addBlock);\r\n  const inputRef = React.useRef() as React.MutableRefObject<HTMLInputElement>;\r\n\r\n  const addBlock = () => {\r\n    const blockName = inputRef.current.value;\r\n\r\n\t\tif (blockName) {\r\n\t\t\tinputRef.current.value = '';\r\n\t\t\tconst newBlock = {\r\n\t\t\t\tname: blockName,\r\n\t\t\t\ttasks: Array<ITask>()\r\n\t\t\t}\r\n\t\t\tconsole.log(newBlock);\r\n\t\t\taddBlockState(newBlock);\r\n\t\t}\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Input ref={inputRef} placeholder={'Nome do bloco de tarefas'} />\r\n      <Button onClick={() => addBlock()}>Adicionar bloco</Button>\r\n\t\t\t<StyledSection>\r\n\t\t\t\t{\r\n\t\t\t\t\tblocks.map((block, index) => \r\n\t\t\t\t\t\t<Block index={index} name={block.name} />\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</StyledSection>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { StoreProvider } from 'easy-peasy';\r\nimport store from './store/index';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StoreProvider store={store}>\r\n      <App />\r\n    </StoreProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}